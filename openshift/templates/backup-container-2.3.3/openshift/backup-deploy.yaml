kind: Template
apiVersion: v1
metadata:
  name: ${NAME}-deployment-template
objects:
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: backup-${ENV_NAME_LOWERCASE}
      annotations:
        volume.beta.kubernetes.io/storage-class: netapp-file-standard
        template.openshift.io.bcgov/create: 'true'
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: ${BACKUP_PVC_SIZE}
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: backup-verification-${ENV_NAME_LOWERCASE}
      annotations:
        volume.beta.kubernetes.io/storage-class: netapp-file-standard
        template.openshift.io.bcgov/create: 'true'
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: ${BACKUP_VERIFICATION_PVC_SIZE}          
    status: {}
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
    spec:
      strategy:
        type: Recreate
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              namespace: ac294c-tools
              name: patroni-backup:2.3.3
      replicas: 1
      selector:
        name: ${NAME}
      template:
        metadata:
          name: ${NAME}
          labels:
            name: ${NAME}
        spec:
          volumes:
            - name: ${BACKUP_VOLUME_NAME}
              persistentVolumeClaim:
                claimName: ${BACKUP_VOLUME_NAME}
            - name: ${VERIFICATION_VOLUME_NAME}
              persistentVolumeClaim:
                claimName: ${VERIFICATION_VOLUME_NAME}
            - name: ${NAME}-config-volume
              configMap:
                name: ${CONFIG_MAP_NAME}
                items:
                  - key: ${CONFIG_FILE_NAME}
                    path: ${CONFIG_FILE_NAME}
          containers:
            - name: ${NAME}
              image: ""
              ports: []
              env:
                - name: BACKUP_STRATEGY
                  value: ${BACKUP_STRATEGY}
                - name: BACKUP_DIR
                  value: ${BACKUP_DIR}
                - name: DAILY_BACKUPS
                  value: ${DAILY_BACKUPS}
                - name: WEEKLY_BACKUPS
                  value: ${WEEKLY_BACKUPS}
                - name: MONTHLY_BACKUPS
                  value: ${MONTHLY_BACKUPS}
                - name: PATRONI_MASTER_${ENV_NAME_UPPERCASE}_USER
                  valueFrom:
                    secretKeyRef:
                      name: patroni-creds-${ENV_NAME_LOWERCASE}
                      key: app-db-username
                - name: PATRONI_MASTER_${ENV_NAME_UPPERCASE}_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: patroni-creds-${ENV_NAME_LOWERCASE}
                      key: app-db-password
                - name: PATRONI_MASTER_${ENV_NAME_UPPERCASE}_METABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: patroni-creds-${ENV_NAME_LOWERCASE}
                      key: metabase-db-username
                - name: PATRONI_MASTER_${ENV_NAME_UPPERCASE}_METABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: patroni-creds-${ENV_NAME_LOWERCASE}
                      key: metabase-db-password
                - name: PATRONI_MASTER_${ENV_NAME_UPPERCASE}_SUPERSET_USER
                  valueFrom:
                    secretKeyRef:
                      name: patroni-creds-${ENV_NAME_LOWERCASE}
                      key: superset-db-username
                - name: PATRONI_MASTER_${ENV_NAME_UPPERCASE}_SUPERSET_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: patroni-creds-${ENV_NAME_LOWERCASE}
                      key: superset-db-password                      
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - name: ${BACKUP_VOLUME_NAME}
                  mountPath: /backups
                - name: ${VERIFICATION_VOLUME_NAME}
                  mountPath: ${VERIFICATION_VOLUME_MOUNT_PATH}
                - name: ${NAME}-config-volume
                  mountPath: ${CONFIG_MOUNT_PATH}${CONFIG_FILE_NAME}
                  subPath: ${CONFIG_FILE_NAME}
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the resources.  Use 'backup-{database name}' depending on your database provider
    required: true
    value: backup-postgres
  - name: ENV_NAME_UPPERCASE
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., DEV, TEST, PROD
    required: true
    value: DEV
  - name: ENV_NAME_LOWERCASE
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    required: true
    value: dev
  - name: BACKUP_STRATEGY
    displayName: Backup Strategy
    description: The strategy to use for backups; for example daily, or rolling.
    required: true
    value: rolling
  - name: BACKUP_DIR
    displayName: The root backup directory
    description: The name of the root backup directory.  The backup volume will be mounted to this directory.
    required: true
    value: /backups/patroni-backup/
  - name: DAILY_BACKUPS
    displayName: Number of Daily Backups to Retain
    description: The number of daily backup files to be retained.  Used for the `rolling` backup strategy.
    required: false
    value: ""
  - name: WEEKLY_BACKUPS
    displayName: Number of Weekly Backups to Retain
    description: The number of weekly backup files to be retained.  Used for the `rolling` backup strategy.
    required: false
    value: ""
  - name: MONTHLY_BACKUPS
    displayName: Number of Monthly Backups to Retain
    description: The number of monthly backup files to be retained.  Used for the `rolling` backup strategy.
    required: false
    value: ""
  - name: CONFIG_FILE_NAME
    displayName: Config File Name
    description: The name of the configuration file.
    required: true
    value: backup.conf
  - name: CONFIG_MAP_NAME
    displayName: Config Map Name
    description: The name of the configuration map.
    required: true
    value: backup-conf
  - name: CONFIG_MOUNT_PATH
    displayName: Config Mount Path
    description: The path to use to mount the config file.
    required: true
    value: /
  - name: BACKUP_VOLUME_NAME
    displayName: Backup Volume Name
    description: The name of the persistent volume used to store the backups.
    required: true
    value: backup
  - name: VERIFICATION_VOLUME_NAME
    displayName: Verification Volume Name
    description: The name for the verification volume, used for restoring and verifying backups.
    required: false
    value: backup-verification
  - name: VERIFICATION_VOLUME_MOUNT_PATH
    displayName: Verification Volume Mount Path
    description: The path on which to mount the verification volume.  This is used by the database server to contain the database configuration and data files. For Mongo, please use /var/lib/mongodb/data . For MSSQL, please use /var/opt/mssql/data. For MariaDB, please use /var/lib/mysql/data
    required: true
    value: /var/lib/pgsql/data
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 350m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 70m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 50Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 100Mi
  - name: BACKUP_PVC_SIZE
    displayName: backup size
    description: backup size
    required: true
    value: 5G    
  - name: BACKUP_VERIFICATION_PVC_SIZE
    displayName: backup verification size
    description: backup verification size
    required: true
    value: 1G