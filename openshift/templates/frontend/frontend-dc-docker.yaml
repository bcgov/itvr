apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: frontend-dc
parameters:
  - name: NAME
    displayName:
    description: the module name entered when run yo bcdk:pipeline, which is zeva
    required: true
  - name: SUFFIX
    displayName:
    description: sample is -pr-0
    required: true
  - name: VERSION
    displayName:
    description: image tag name for output
    required: true
  - name: ENV_NAME
    value: dev
    displayName: Environment name
    description: Environment name, dev, test and prod
    required: true
  - name: HOST_NAME
    displayName: Host name for route
    description: Host name for route
    required: true
  - name: CPU_REQUEST
    displayName: Requested CPU
    description: Requested CPU
    required: true
  - name: CPU_LIMIT
    displayName: CPU upper limit
    description: CPU upper limit
    required: true
  - name: MEMORY_REQUEST
    displayName: Requested memory
    description: Requested memory
    required: true
  - name: MEMORY_LIMIT
    displayName: Memory upper limit
    description: Memory upper limit
    required: true
  - name: REPLICAS
    value: "1"
    required: true
  - name: REACT_APP_BCSC_KEYCLOAK_CLIENT_ID
    displayName: REACT_APP_BCSC_KEYCLOAK_CLIENT_ID
    description: keycload client id for BC Service Card
    required: true
  - name: REACT_APP_BCSC_KEYCLOAK_REALM
    displayName: REACT_APP_BCSC_KEYCLOAK_REALM
    description: keycload client realm for BC Service Card
    required: true
  - name: REACT_APP_BCSC_KEYCLOAK_URL
    displayName: REACT_APP_BCSC_KEYCLOAK_URL
    description: keycload url for BC Service Card
    required: true
  - name: REACT_APP_BCEID_KEYCLOAK_CLIENT_ID
    displayName: REACT_APP_BCEID_KEYCLOAK_CLIENT_ID
    description: keycload client id for BCeID
    required: true
  - name: REACT_APP_BCEID_KEYCLOAK_REALM
    displayName: REACT_APP_BCEID_KEYCLOAK_REALM
    description: keycload client realm for BCeID
    required: true
  - name: REACT_APP_BCEID_KEYCLOAK_URL
    displayName: REACT_APP_BCEID_KEYCLOAK_URL
    description: keycload url for BCeID
    required: true
  - name: REACT_APP_API_BASE
    displayName: REACT_APP_API_BASE
    description: backend url
    required: true
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the client / front end image
      labels:
        shared: "true"
      creationTimestamp: null
      name: ${NAME}-frontend
    spec:
      lookupPolicy:
        local: false
    status:
      dockerImageRepository: ""
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${NAME}-frontend-features${SUFFIX}
      creationTimestamp:
    data:
      features.js: |
        window.itvr_config = {
          "REACT_APP_BCSC_KEYCLOAK_CLIENT_ID": "${REACT_APP_BCSC_KEYCLOAK_CLIENT_ID}",
          "REACT_APP_BCSC_KEYCLOAK_REALM": "${REACT_APP_BCSC_KEYCLOAK_REALM}",
          "REACT_APP_BCSC_KEYCLOAK_URL": "${REACT_APP_BCSC_KEYCLOAK_URL}",          
          "REACT_APP_BCEID_KEYCLOAK_CLIENT_ID": "${REACT_APP_BCEID_KEYCLOAK_CLIENT_ID}",
          "REACT_APP_BCEID_KEYCLOAK_REALM": "${REACT_APP_BCEID_KEYCLOAK_REALM}",
          "REACT_APP_BCEID_KEYCLOAK_URL": "${REACT_APP_BCEID_KEYCLOAK_URL}",
          "REACT_APP_API_BASE": "${REACT_APP_API_BASE}",
          "REACT_APP_ENV": "${ENV_NAME}"
        };
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      name: ${NAME}-frontend${SUFFIX}
      labels:
        name: frontend
        app: zeva
        role: frontend
        env: ${ENV_NAME}
    spec:
      ports:
        - name: web
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        name: ${NAME}-frontend${SUFFIX}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      annotations:
        haproxy.router.openshift.io/timeout: 1200s
      labels:
        name: frontend
        app: zeva
        role: frontend
        env: ${ENV_NAME}
      name: ${NAME}-frontend${SUFFIX}
    spec:
      host: ${HOST_NAME}
      port:
        targetPort: web
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}-frontend${SUFFIX}
        weight: 100
      wildcardPolicy: None
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: ${NAME}-frontend${SUFFIX}
      annotations:
        description: Defines how to deploy the frontend application
      creationTimestamp: null
    spec:
      replicas: ${{REPLICAS}}
      revisionHistoryLimit: 10
      automountServiceAccountToken: false
      selector:
        name: ${NAME}-frontend${SUFFIX}
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            name: ${NAME}-frontend${SUFFIX}
        spec:
          volumes:
            - name: ${NAME}-frontend-features${SUFFIX}
              configMap:
                name: ${NAME}-frontend-features${SUFFIX}
          containers:
            - name: frontend
              env: null
              image:
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: ${NAME}-frontend-features${SUFFIX}
                  mountPath: /app/static/js/config
              livenessProbe:
                failureThreshold: 10
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 8080
                timeoutSeconds: 3
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                failureThreshold: 10
                initialDelaySeconds: 20
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 8080
                timeoutSeconds: 3
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - frontend
            from:
              kind: ImageStreamTag
              name: ${NAME}-frontend:${VERSION}
            lastTriggeredImage:
          type: ImageChange
        - type: ConfigChange
    status:
      availableReplicas: 0
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      unavailableReplicas: 0
      updatedReplicas: 0
