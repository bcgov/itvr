---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: itvr-network-policy
metadata:
  name: itvr-network-policy
parameters:
  - name: SUFFIX
    displayName: null
    description: sample is -dev-97
    required: true    
objects:
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-backend-accepts${SUFFIX}
    spec:
      ## Allow backend to accept communication from frontend
      ## Allow backend to accept communication from schema-spy
      podSelector:
        matchLabels:
          name: itvr-backend${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: itvr-frontend${SUFFIX}
            - podSelector:
                matchLabels:
                  name: schemaspy-public
          ports:
            - protocol: TCP
              port: 8080
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts${SUFFIX}
    spec:
      ## Allow patroni to accept communications from backend
      ## Allow patroni to accept communications from backend mid lifecycle pod
      ## Allow patroni to accept communications from backup container
      ## Allow patroni to accept communications from django-q
      ## Allow patroni to accept communications from schemaspy
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: itvr-spilo
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: itvr-backend${SUFFIX}
            - podSelector:
                matchLabels:
                  openshift.io/deployer-pod.type: hook-mid
            - podSelector:
                matchLabels:
                  name: patroni-backup
            - podSelector:
                matchLabels:
                  name: itvr-task-queue${SUFFIX}
            - podSelector:
                matchLabels:
                  name: schemaspy-public
          ports:
            - protocol: TCP
              port: 5432
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-clamav-accepts${SUFFIX}
    spec:
      ## Allow minio to accept communication from backend
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: itvr-clamav
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: itvr-backend${SUFFIX}
          ports:
            - protocol: TCP
              port: 3310               