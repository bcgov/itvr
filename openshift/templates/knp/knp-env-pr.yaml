---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: itvr-network-policy
metadata:
  name: itvr-network-policy
parameters:
  - name: SUFFIX
    displayName: null
    description: sample is -dev-97
    required: true    
objects:
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-backend-accepts-frontend${SUFFIX}
    spec:
      ## Allow backend to accept communication from frontend
      podSelector:
        matchLabels:
          name: itvr-backend${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: itvr-frontend${SUFFIX}
          ports:
            - protocol: TCP
              port: 8080
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-backend${SUFFIX}
    spec:
      ## Allow patroni to accept communications from backend
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: itvr-spilo
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: itvr-backend${SUFFIX}
          ports:
            - protocol: TCP
              port: 5432
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-minio-accepts-backend${SUFFIX}
    spec:
      ## Allow minio to accept communication from backend
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: itvr-minio
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: itvr-backend${SUFFIX}
          ports:
            - protocol: TCP
              port: 9000                  
  ## Other Network Policies              
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-backendmid${SUFFIX}
    spec:
      ## Allow patroni to accept communications from backend mid lifecycle pod
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: itvr-spilo
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  openshift.io/deployer-pod.type: hook-mid
          ports:
            - protocol: TCP
              port: 5432
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-patroni-itself${SUFFIX}
    spec:
      ## Allow patroni to accept communications from other patroni pods
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: itvr-spilo
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/instance: itvr-spilo
          ports:
            - protocol: TCP
              port: 5432    
            - protocol: TCP
              port: 8008                             
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-backup-container
    spec:
      ## Allow patroni to accept communications from backup container
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: itvr-spilo
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: patroni-backup
          ports:
            - protocol: TCP
              port: 5432          
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-task-queue
    spec:
      ## Allow patroni to accept communications from backup container
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: itvr-spilo
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: itvr-task-queue${SUFFIX}
          ports:
            - protocol: TCP
              port: 5432                           
#  - apiVersion: networking.k8s.io/v1
#    kind: NetworkPolicy
#    metadata:
#      name: allow-patroni-accepts-nagios${SUFFIX}
#    spec:
      ## Allow patroni to accept communications from nagios
#      podSelector:
#        matchLabels:
#          cluster-name: patroni${SUFFIX}
#      ingress:
#        - from:
#            - podSelector:
#                matchLabels:
#                  app: nagios
#          ports:
#            - protocol: TCP
#              port: 5432
#            - protocol: TCP
#              port: 8008
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-schemaspy
    spec:
      ## Allow patroni to accept communications from schemaspy
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: itvr-spilo
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: schemaspy-public
          ports:
            - protocol: TCP
              port: 5432          
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-backend-accepts-schemaspy
    spec:
      ## Allow backend to accept communication from schemaspy
      podSelector:
        matchLabels:
          name: itvr-backend${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: schemaspy-public
          ports:
            - protocol: TCP
              port: 8080