apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: itvr-task-queue-dc
parameters:
  - name: NAME
    displayName: null
    description: 'the module name entered when run yo bcdk:pipeline, which is itvr'
    required: true
  - name: SUFFIX
    displayName: null
    description: sample is -dev-97
    required: true
  - name: VERSION
    displayName: null
    description: image tag name for output
    required: true
  - name: CPU_REQUEST
    displayName: Requested CPU
    description: Requested CPU
    required: true
  - name: CPU_LIMIT
    displayName: CPU upper limit
    description: CPU upper limit
    required: true
  - name: MEMORY_REQUEST
    displayName: Requested memory
    description: Requested memory
    required: true
  - name: MEMORY_LIMIT
    displayName: Memory upper limit
    description: Memory upper limit
    required: true
  - name: REPLICAS
    value: '1'
    required: true
objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
      creationTimestamp: null
      name: ${NAME}-task-queue${SUFFIX}
    spec:
      replicas: ${{REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        name: ${NAME}-task-queue${SUFFIX}
      strategy:
        activeDeadlineSeconds: 800
        resources: {}
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            name: ${NAME}-task-queue${SUFFIX}
        spec:
          containers:
            - name: task-queue
              image: null
              imagePullPolicy: IfNotPresent
              env:
                - name: DJANGO_TASKS
                  value: true
              readinessProbe:
                failureThreshold: 10
                tcpSocket:
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 15
                successThreshold: 1
                timeoutSeconds: 3
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - backend
            from:
              kind: ImageStreamTag
              name: ${NAME}-task-queue:${VERSION}
            lastTriggeredImage: null
          type: ImageChange
        - type: ConfigChange
    status:
      availableReplicas: 0
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      unavailableReplicas: 0
      updatedReplicas: 0
