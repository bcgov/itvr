# Generated by Django 4.0.1 on 2022-06-30 15:56

import api.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import encrypted_fields.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('api', '0002_alter_goelectricrebate_ncda_id'),
    ]

    operations = [
        migrations.AddField(
            model_name='goelectricrebateapplication',
            name='is_legacy',
            field=models.BooleanField(default=False, editable=False),
        ),
        migrations.AlterField(
            model_name='goelectricrebateapplication',
            name='address',
            field=models.CharField(max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='goelectricrebateapplication',
            name='application_type',
            field=models.CharField(max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='goelectricrebateapplication',
            name='city',
            field=models.CharField(max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='goelectricrebateapplication',
            name='consent_personal',
            field=models.BooleanField(null=True, validators=[api.validators.validate_consent]),
        ),
        migrations.AlterField(
            model_name='goelectricrebateapplication',
            name='consent_tax',
            field=models.BooleanField(null=True, validators=[api.validators.validate_consent]),
        ),
        migrations.AlterField(
            model_name='goelectricrebateapplication',
            name='date_of_birth',
            field=models.DateField(null=True, validators=[api.validators.validate_driving_age]),
        ),
        migrations.AlterField(
            model_name='goelectricrebateapplication',
            name='email',
            field=models.EmailField(max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='goelectricrebateapplication',
            name='first_name',
            field=models.CharField(max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='goelectricrebateapplication',
            name='last_name',
            field=models.CharField(max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='goelectricrebateapplication',
            name='sin',
            field=encrypted_fields.fields.EncryptedCharField(max_length=9, null=True, validators=[api.validators.validate_sin]),
        ),
        migrations.AlterField(
            model_name='goelectricrebateapplication',
            name='tax_year',
            field=models.IntegerField(null=True),
        ),
        migrations.AlterField(
            model_name='goelectricrebateapplication',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='goelectricrebateapplication',
            constraint=models.CheckConstraint(check=models.Q(('is_legacy__exact', True), ('user__isnull', False), _connector='OR'), name='user_null_constraint'),
        ),
        migrations.AddConstraint(
            model_name='goelectricrebateapplication',
            constraint=models.CheckConstraint(check=models.Q(('is_legacy__exact', True), ('sin__isnull', False), _connector='OR'), name='sin_null_constraint'),
        ),
        migrations.AddConstraint(
            model_name='goelectricrebateapplication',
            constraint=models.CheckConstraint(check=models.Q(('is_legacy__exact', True), ('last_name__isnull', False), _connector='OR'), name='last_name_null_constraint'),
        ),
        migrations.AddConstraint(
            model_name='goelectricrebateapplication',
            constraint=models.CheckConstraint(check=models.Q(('is_legacy__exact', True), ('first_name__isnull', False), _connector='OR'), name='first_name_null_constraint'),
        ),
        migrations.AddConstraint(
            model_name='goelectricrebateapplication',
            constraint=models.CheckConstraint(check=models.Q(('is_legacy__exact', True), ('email__isnull', False), _connector='OR'), name='email_null_constraint'),
        ),
        migrations.AddConstraint(
            model_name='goelectricrebateapplication',
            constraint=models.CheckConstraint(check=models.Q(('is_legacy__exact', True), ('address__isnull', False), _connector='OR'), name='address_null_constraint'),
        ),
        migrations.AddConstraint(
            model_name='goelectricrebateapplication',
            constraint=models.CheckConstraint(check=models.Q(('is_legacy__exact', True), ('city__isnull', False), _connector='OR'), name='city_null_constraint'),
        ),
        migrations.AddConstraint(
            model_name='goelectricrebateapplication',
            constraint=models.CheckConstraint(check=models.Q(('is_legacy__exact', True), ('date_of_birth__isnull', False), _connector='OR'), name='date_of_birth_null_constraint'),
        ),
        migrations.AddConstraint(
            model_name='goelectricrebateapplication',
            constraint=models.CheckConstraint(check=models.Q(('is_legacy__exact', True), ('tax_year__isnull', False), _connector='OR'), name='tax_year_null_constraint'),
        ),
        migrations.AddConstraint(
            model_name='goelectricrebateapplication',
            constraint=models.CheckConstraint(check=models.Q(('is_legacy__exact', True), ('consent_personal__isnull', False), _connector='OR'), name='consent_personal_null_constraint'),
        ),
        migrations.AddConstraint(
            model_name='goelectricrebateapplication',
            constraint=models.CheckConstraint(check=models.Q(('is_legacy__exact', True), ('consent_tax__isnull', False), _connector='OR'), name='consent_tax_null_constraint'),
        ),
    ]
