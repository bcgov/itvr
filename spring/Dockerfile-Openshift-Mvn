# Use the official Maven image as a build environment
FROM artifacts.developer.gov.bc.ca/docker-remote/maven:3.8.4-openjdk-17-slim AS builder

WORKDIR /app

# Copy the Maven wrapper files and the POM file
COPY .mvn/ .mvn
COPY mvnw pom.xml ./
COPY libs ./libs
RUN mkdir /.m2 && \
    chgrp -R root /.m2 && \
    chmod -R g+rw /.m2 && \
    chgrp -R root /app && \
    chmod -R g+rw /app

# Resolve project dependencies
RUN mvn dependency:resolve

# Copy the source code
COPY src ./src

# Build the application
RUN mvn package && \
    ls -l /app/target

# Start a new stage to reduce the size of the final image
FROM artifacts.developer.gov.bc.ca/docker-remote/eclipse-temurin:17-jdk-jammy

WORKDIR /app

# Copy the built JAR file from the builder stage
COPY --from=builder /app/target/ /app/
RUN ls -l /app && \
    ls -l /app/classes
COPY --from=builder /app/libs ./libs

# ENV CLASSPATH=.:/app/libs/enttoolkit.jar

# Expose the port your application runs on
EXPOSE 8080

# Run the JAR file
CMD ["java", "-cp", "/app/libs/enttoolkit.jar", "-jar", "spring-cra-1.0.jar", "-Denvironment=production", "-Dspring-boot.run.jvmArguments='--add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED'"]
