# Use the official Maven image as a build environment
FROM artifacts.developer.gov.bc.ca/docker-remote/maven:3.8.4-openjdk-17-slim AS builder

WORKDIR /app

# Copy the Maven wrapper files and the POM file
COPY .mvn/ .mvn
COPY mvnw pom.xml ./
COPY libs ./libs
RUN mkdir /.m2 && \
    chgrp -R root /.m2 && \
    chmod -R g+rw /.m2 && \
    chgrp -R root /app && \
    chmod -R g+rw /app

RUN mvn install:install-file -Dfile=./libs/enttoolkit.jar -DgroupId=entrust -DartifactId=toolkit -Dversion=1.0 -Dpackaging=jar

# RUN curl -o ./entrustcodesignca.cer https://web.entrust.com/root-certificates/CSBR1.cer?_ga=2.238222531.2119537634.1657895221-140272303.1651182067

# RUN keytool -importcert -file entrustcodesignca.cer -keystore /opt/java/openjdk/lib/security/cacerts -alias "entrustcodesignca" -storepass changeit

# Resolve project dependencies
RUN mvn dependency:resolve

# Copy the source code
COPY src ./src

# Build the application
RUN mvn package

# Start a new stage to reduce the size of the final image
FROM artifacts.developer.gov.bc.ca/docker-remote/eclipse-temurin:22_36-jre

WORKDIR /app

# Copy the built JAR file from the builder stage
COPY --from=builder /app/target/spring-cra-1.0.jar /app/spring-cra-1.0.jar

COPY codesigncerts ./codesigncerts

RUN keytool -importcert -file .codesigncerts/entrustca.pem -keystore /opt/java/openjdk/lib/security/cacerts -storepass changeit -alias entrustcodesign && \
    keytool -importcert -file .codesigncerts/jceca.pem -keystore /opt/java/openjdk/lib/security/cacerts -storepass changeit -alias jcecodesign

RUN echo "\ngrant codeBase \"file:/app/spring-cra-1.0.jar\" { \n\tpermission java.security.AllPermission;\n};" >> /opt/java/openjdk/lib/security/default.policy

RUN 
# Expose the port your application runs on
EXPOSE 8080

# Run the JAR file
CMD ["java", "-jar", "spring-cra-1.0.jar", "-Denvironment=production", "-Dspring-boot.run.jvmArguments='--add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED'"]
