patroni:

  env:
    ALLOW_NOSSL: true
    #USE_WALG_BACKUP: "true"
    #USE_WALG_RESTORE: "true"
    #WALE_S3_ENDPOINT: "https://tfrs-minio-test.apps.silver.devops.gov.bc.ca"
    #WALE_S3_PREFIX: "s3://tfrs/patroni-backup"


  replicaCount: 3

  image:
    # Image was built from
    # https://github.com/zalando/spilo/tree/master/postgres-appliance
    repository: registry.opensource.zalan.do/acid/spilo-14
    tag: 2.1-p3
    pullPolicy: IfNotPresent

  # Credentials used by Patroni
  # https://github.com/zalando/patroni/blob/master/docs/SETTINGS.rst#postgresql
  # https://github.com/zalando/spilo/blob/master/ENVIRONMENT.rst
  credentials:
    random: true
    # set to true to generate random creds on install
    superuser: tea
    admin: cola
    standby: pinacolada

  # Distribution Configuration stores
  # Please note that only one of the following stores should be enabled.
  kubernetes:
    dcs:
      enable: true
    configmaps:
      enable: true
  etcd:
    enable: false
    deployChart: false
    # If not deploying etcd chart, fill-in value for etcd service
    # <service>.<namespace>.svc.cluster.local
    host:
    # Leave blank to use vendored etcd chart
    discovery:
  zookeeper:
    enable: false
    deployChart: false
    # If not deploying etcd chart, fill-in list of ZooKeeper members in format:
    # 'host1:port1','host2:port2','etc...'
    hosts:
  consul:
    enable: false
    deployChart: false
    # Leave blank to use vendored consul chart
    hosts:

  # Extra custom environment variables.
  env: {}

  walE:
    # Specifies whether Wal-E should be enabled
    enable: false
    # Cron schedule for doing base backups
    scheduleCronJob: 00 01 * * *
    # Amount of base backups to retain
    retainBackups: 2
    # Path to the S3 or GCS bucket used for WAL-E base backups
    s3Bucket:
    gcsBucket:
    # The GCS bucket folder where the logs will be updated
    gcsBucketBackupLocation: wal
    # Name of the secret that holds the credentials to the bucket
    kubernetesSecret:
    # Maximum size of the WAL segments accumulated after the base backup to
    # consider WAL-E restore instead of pg_basebackup
    backupThresholdMegabytes: 1024
    # Maximum ratio (in percents) of the accumulated WAL files to the base backup
    # to consider WAL-E restore instead of pg_basebackup
    backupThresholdPercentage: 30

  persistentVolume:
    enabled: true
    size: 1G
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "netapp-block-standard"

  resources:
    # If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 300m
      memory: 500Mi
    requests:
       cpu: 100m
       memory: 128Mi

