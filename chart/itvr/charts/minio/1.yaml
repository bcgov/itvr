---
# Source: itvr-minio/charts/minio/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: itvr-minio
  namespace: "ac294c-dev"
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-10.1.7
    app.kubernetes.io/instance: itvr
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
secrets:
  - name: itvr-minio
---
# Source: itvr-minio/charts/minio/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: itvr-minio
  namespace: ac294c-dev
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-10.1.7
    app.kubernetes.io/instance: itvr
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  root-user: "YWRtaW4="
  root-password: "Z083S2JNbHpFdg=="
  key.json: ""
---
# Source: itvr-minio/charts/minio/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: itvr-minio
  namespace: ac294c-dev
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-10.1.7
    app.kubernetes.io/instance: itvr
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "100Mi"
  storageClassName: netapp-block-standard
---
# Source: itvr-minio/charts/minio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: itvr-minio
  namespace: ac294c-dev
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-10.1.7
    app.kubernetes.io/instance: itvr
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: minio-api
      port: 9000
      targetPort: minio-api
      nodePort: null
    - name: minio-console
      port: 9001
      targetPort: minio-console
      nodePort: null
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: itvr
---
# Source: itvr-minio/charts/minio/templates/standalone/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: itvr-minio
  namespace: ac294c-dev
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-10.1.7
    app.kubernetes.io/instance: itvr
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/instance: itvr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        helm.sh/chart: minio-10.1.7
        app.kubernetes.io/instance: itvr
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/credentials-secret: b97e870ad629eec9fcf65ceeea8003212e3b3193bf9f1364c0ee2ee15c064ca6
    spec:
      
      serviceAccountName: itvr-minio
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: minio
                    app.kubernetes.io/instance: itvr
                namespaces:
                  - "ac294c-dev"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1008250000
      containers:
        - name: minio
          image: docker.io/bitnami/minio:2022.2.12-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1008250000
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MINIO_SCHEME
              value: "http"
            - name: MINIO_FORCE_NEW_KEYS
              value: "no"
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: itvr-minio
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: itvr-minio
                  key: root-password
            - name: MINIO_DEFAULT_BUCKETS
              value: itvr
            - name: MINIO_BROWSER
              value: "on"
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
            - name: MINIO_CONSOLE_PORT_NUMBER
              value: "9001"
          envFrom:
          ports:
            - name: minio-api
              containerPort: 9000
              protocol: TCP
            - name: minio-console
              containerPort: 9001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: minio-api
              scheme: "HTTP"
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: minio-api
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits:
              cpu: 100m
              memory: 140Mi
            requests:
              cpu: 50m
              memory: 70Mi
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: itvr-minio
